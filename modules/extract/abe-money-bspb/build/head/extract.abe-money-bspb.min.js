var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0"},baseurlDemo="https://idemo.bspb.ru/",baseurlReal="https://i.bspb.ru/",baseurl;
function login(a){AnyBalance.setDefaultCharset("utf-8");checkEmpty(a.login,"Введите логин!");checkEmpty(a.password,"Введите пароль!");baseurl=baseurlReal;"demo"==a.login&&(baseurl=baseurlDemo);var b=AnyBalance.requestGet(baseurl+"welcome",g_headers);if(!b||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(b),new AnyBalance.Error("Ошибка при подключении к сайту провайдера! Попробуйте обновить данные позже.");/logout/i.test(b)?AnyBalance.trace("Уже залогинены, используем существующую сессию"):
(getElement(b,/<form[^>]+id="login-form"[^>]*>/i),b=createFormParams(b,function(b,c,e,h){return"username"==e?a.login:"password"==e?a.password:h}),b=AnyBalance.requestPost(baseurl+"login",b,addHeaders({"X-Requested-With":"XMLHttpRequest",Referer:baseurl})));if(/<input[^>]+name="otpCode"/i.test(b)){AnyBalance.trace("Потребовался ввод кода.");var c=getElement(b,/<span[^>]*otp-code-text[^>]*/i,replaceTagsAndSpaces);getElement(b,/<form[^>]+name="login-form"[^>]*>/i);b=createFormParams(b,function(a,b,e,
h){return"otpCode"==e?AnyBalance.retrieveCode((c||"Пожалуйста, введите код из SMS для входа в интернет-банк.")+(baseurl==baseurlDemo?" Для демонстрации введите 0000":""),null,{inputType:"number",time:18E4}):h});b=AnyBalance.requestPost(baseurl+"login/authenticateotp",b,addHeaders({Referer:baseurl}))}if(!/logout/i.test(b)){var e=getParam(b,null,null,/<div[^>]+alert-error[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);if(e)throw new AnyBalance.Error(e,null,/Неверные данные пользователя/i.test(e));AnyBalance.trace(b);
throw new AnyBalance.Error("Не удалось зайти в интернет-банк. Сайт изменен?");}__setLoginSuccessful();return b}
function processAccounts(a,b){if(AnyBalance.isAvailable("accounts")){a=AnyBalance.requestGet(baseurl+"accounts",g_headers);var c=getElement(a,/<table[^>]+id="accounts"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу счетов: "+a);a=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено счетов: "+a.length);b.accounts||(b.accounts=[]);for(c=0;c<a.length;++c){var e=a[c],d=getParam(e,null,null,/<td[^>]+class="account"[^>]*id="account-([^"]*)/i,replaceHtmlEntities),f=getParam(e,null,null,
/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"accounts/details?accountId="+d,addHeaders({Referer:baseurl})),g=getParam(e,null,null,/<div[^>]+account-number[^>]*>([\s\S]*?)<\/div>/i,[/\s+\D+\s*$/,"",replaceTagsAndSpaces,/\s+/g,""]),d=findAccount(b,d,f);d.num=g;__shouldProcess("accounts",d)&&processAccount(e,d);b.accounts.push(d)}}}
function processAccount(a,b){AnyBalance.trace("Обработка счета "+b.__name);getParam(a,b,"accounts.balance",/<label[^>]*>\s*Остаток[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"accounts.available",/<label[^>]*>\s*Доступно[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,["accounts.currency","accounts.balance","accounts.available"],/<label[^>]*>\s*Остаток[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);
getParam(a,b,"accounts.office",/Офис счёта[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.owner",/Получатель[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);isAvailable("accounts.transactions")&&processAccountTransactions(a,b)}
function processCards(a,b){if(AnyBalance.isAvailable("cards")){a=AnyBalance.requestGet(baseurl+"cards",g_headers);var c=getElement(a,/<table[^>]+id="cards"[^>]*>/i);if(c){a=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено карт и карточных счетов: "+a.length);b.cards=[];for(var e,c=0;c<a.length;++c){var d=a[c];if(/class="account-row"/i.test(d)){var f=getParam(d,null,null,/accountId=([^"&]*)/i,replaceHtmlEntities),g=getParam(d,null,null,/<a[^>]+accountId=[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces);
e=findAccount(b,f,g);getParam(d,e,"accounts.available",/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(d,e,["accounts.currency","accounts.balance","accounts.available"],/(?:[\s\S]*?<td[^>]*>){6}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseCurrency)}else{var f=getParam(d,null,null,/cardId=([^"&]*)/i,replaceHtmlEntities),g=getParam(d,null,null,/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),h=getParam(d,null,null,/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)(?:<\/td>|<div)/i,
replaceTagsAndSpaces),f={__id:f,__name:g,num:h,account_id:e.__id};__shouldProcess("cards",f)&&processCard(d,f);b.cards.push(f)}}}else AnyBalance.trace(a),AnyBalance.trace("Не удалось найти таблицу с картами.")}}function findAccount(a,b,c){a.accounts||(a.accounts=[]);for(var e=0;e<a.accounts.length;e++){var d=a.accounts[e];if(d.__id==b)return d}d={__id:b,__name:c};a.accounts.push(d);return d}
function processCard(a,b){var c=getElements(a,/<td[^>]*>/ig);getParam(c[1],b,"cards.holder",/<div[^>]+muted[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(c[2],b,"cards.status",null,replaceTagsAndSpaces);getParam(c[3],b,"cards.till",null,replaceTagsAndSpaces,parseDate);getParam(c[4],b,"cards.bonus",null,replaceTagsAndSpaces,parseBalance);AnyBalance.isAvailable("cards.notifications")&&/card-notification[^>]*btn-success/i.test(a)&&processCardNotifications(b)}
var g_replaceWithSpaces=[replaceTagsAndSpaces,/\s+/g,""];
function processDeposits(a,b){if(AnyBalance.isAvailable("deposits")){a=AnyBalance.requestGet(baseurl+"deposits",g_headers);var c=getElement(a,/<table[^>]+id="deposits"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу вкладов: "+a);a=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено вкладов: "+a.length);b.deposits=[];for(c=0;c<a.length;++c){var e=a[c],d=getParam(e,null,null,/depositId=([^"&]*)/i,replaceHtmlEntities),f=getParam(e,null,null,/<a[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces);d?e=AnyBalance.requestGet(baseurl+"deposits/details?depositId="+d,addHeaders({Referer:baseurl})):(d=getParam(e,null,null,/depositOrderId=([^"&]*)/i,replaceHtmlEntities),f=getParam(e,null,null,/<a[^>]+>([\s\S]*?)<\/a>/i,replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"deposits/orderdetails?depositOrderId="+d,addHeaders({Referer:baseurl})));var g=getParam(e,null,null,/<label[^>]*>\s*Счёт вклада[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces),d={__id:d,__name:f,
num:g};__shouldProcess("deposits",d)&&processDeposit(e,d);b.deposits.push(d)}}}function parseBool(a){return!/нет|не предусмотрен/i.test(a)}
function processDeposit(a,b){getParam(a,b,"deposits.balance",/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,["deposits.currency","deposits.balance"],/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(a,b,"deposits.agreement",/<label[^>]*>\s*Договор №[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"deposits.num_service",/<label[^>]*>\s*Обслуживающий счёт[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,
g_replaceWithSpaces);getParam(a,b,"deposits.num_return",/<label[^>]*>\s*Счёт для возврата[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces);getParam(a,b,"deposits.type",/<label[^>]*>\s*Вид[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"deposits.period",/<label[^>]*>\s*Срок[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.date_start",/<label[^>]*>\s*Начало[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);
getParam(a,b,"deposits.date_end",/<label[^>]*>\s*Окончание[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"deposits.pct",/<label[^>]*>\s*Ставка[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.prolong",/<label[^>]*>\s*Продление[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"deposits.pct_sum",/<label[^>]*>\s*Расчётный доход[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);
getParam(a,b,"deposits.office",/<label[^>]*>\s*Офис вклада[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.early",/<label[^>]*>\s*Досрочное расторжение[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBool);getParam(a,b,"deposits.status",/<label[^>]*>\s*Статус договора[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces)}
function processCredits(a,b){if(AnyBalance.isAvailable("credits")){a=AnyBalance.requestGet(baseurl+"loans",g_headers);var c=getElement(a,/<table[^>]+id="loans"[^>]*>/i);c||AnyBalance.trace("Не удалось найти таблицу кредитов: "+a);a=getElements(c,[/<tr[^>]*>/ig,/<td/i]);AnyBalance.trace("Найдено кредитов: "+a.length);b.credits=[];for(c=0;c<a.length;++c){0<c&&AnyBalance.sleep(1E3);var e=a[c],d=getParam(e,null,null,/loanId=([^"]*)/i,null,html_entity_decode),f=getParam(e,null,null,/<[^>]+class="alias"[^>]*>([\s\S]*?)<\/a>/i,
replaceTagsAndSpaces),e=AnyBalance.requestGet(baseurl+"loans/details?loanId="+d,addHeaders({Referer:baseurl})),g=getParam(e,null,null,/<label[^>]*>\s*Обслуживающий счёт[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,g_replaceWithSpaces),d={__id:d,__name:f,num:g};__shouldProcess("credits",d)&&processCredit(e,d);b.credits.push(d)}}}
function processCredit(a,b){getParam(a,b,"credits.balance",/<label[^>]*>\s*Осталось погасить[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,["credits.currency","credits.balance"],/<label[^>]*>\s*Осталось погасить[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency);getParam(a,b,"credits.agreement",/<label[^>]*>\s*Договор №[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"credits.goal",/<label[^>]*>\s*Цель[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces);getParam(a,b,"credits.type",/<label[^>]*>\s*Вид[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(a,b,"credits.date_start",/<label[^>]*>\s*Начало[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"credits.date_end",/<label[^>]*>\s*Окончание[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseDate);getParam(a,b,"credits.pct",/<label[^>]*>\s*Ставка[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);
getParam(a,b,"credits.limit",/<label[^>]*>\s*Сумма[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.debt",/<label[^>]*>\s*Задолженность[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.peni",/<label[^>]*>\s*Пени[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);AnyBalance.isAvailable("credits.schedule")&&processCreditSchedule(a,b);AnyBalance.isAvailable("credits.transactions")&&processCreditTransactions(a,
b)}function processCreditSchedule(a,b){var c=getElement(a,/<table[^>]+repayments-table[^>]*>/i);c?(b.schedule=[],processTable(c,b.schedule,"credits.schedule.",{date:{re:/Дата/i,result_func:parseDate},balance:{re:/Осталось погасить/i},debt:{re:/Гашение кредита/i},pct:{re:/Гашение процентов/i},sum:{re:/Общая сумма погашения/i}})):AnyBalance.trace("Таблица графика платежей не найдена: "+a)}
function processInfo(a,b){a=AnyBalance.requestGet(baseurl+"settings/phonesform",g_headers);b=b.info={};getParam(a,b,"info.fio",/<option[^>]+representee[^>]+selected[^>]*>([\s\S]*?)<\/option>/i,replaceTagsAndSpaces);getParam(a,b,"info.mphone",/<input[^>]+value="([^"]*)[^>]+name="[^"]*phone-1"[^>]*/i,replaceHtmlEntities)}function processBonus(a,b){getParam(a,b,"bonus",/<div[^>]+bonus-points[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance)};
