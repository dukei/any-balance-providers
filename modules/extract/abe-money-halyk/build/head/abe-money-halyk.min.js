var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:35.0) Gecko/20100101 Firefox/35.0"},baseurl="https://www.myhalyk.kz/wb/";
function login(){var b=AnyBalance.getPreferences();AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Введите логин!");checkEmpty(b.password,"Введите пароль!");var a=AnyBalance.requestGet(baseurl+"",g_headers);if(!a||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(a),new AnyBalance.Error("Ошибка при подключении к сайту интернет-банка! Попробуйте обновить данные позже.");if(/logout/i.test(a))AnyBalance.trace("Уже залогинены, используем существующую сессию");else{var c=getElement(a,
/<form[^>]+id="FORM_FAST_LOGIN"[^>]*>/i);if(!c)throw AnyBalance.trace(a),new AnyBalance.Error("Не удалось найти форму входа. Сайт изменен?");a=createFormParams(c,function(a,c,d,h){return"Login"==d?b.login:"password"==d?b.password:h});a=AnyBalance.requestPost(baseurl+"auth/userlogin?execution=e1s1",a,addHeaders({Referer:AnyBalance.getLastUrl()}))}if(!/logout/i.test(a)){if(c=getElement(a,/<div[^>]+cs-form-error[^>]*>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(c,null,/пользователь не найден|Неверный пароль/i.test(c));
AnyBalance.trace(a);throw new AnyBalance.Error("Не удалось зайти в интернет-банк. Сайт изменен?");}__setLoginSuccessful();return a}
function processAccounts(b,a){if(AnyBalance.isAvailable("accounts")){AnyBalance.trace("Получаем счета");/cards-list-title/i.test(b)||(b=AnyBalance.requestGet(baseurl+"services/CARDS_ACCOUNTS_WB",g_headers));var c=getElements(b,/<li[^>]+slide-list-account-item[^>]*>/i);if(c.length){AnyBalance.trace("Найдено счетов: "+c.length);a.accounts=[];for(var f=0;f<c.length;++f){var e=c[f],d=getElement(e,/<ul[^>]+cards-accounts-list[^>]*>/i),e=e.replace(d,""),d=getElement(e,/<span[^>]+contract-number[^>]*>/i,
replaceTagsAndSpaces),d={__id:d,__name:d,num:d};__shouldProcess("accounts",d)&&processAccount(e,d);a.accounts.push(d)}}else/У вас нет счетов/i.test(b)?(AnyBalance.trace("У вас нет счетов"),a.accounts=[]):(AnyBalance.trace(b),AnyBalance.trace("Не удалось найти список счетов."))}}
function processAccount(b,a){AnyBalance.trace("Обработка счета "+a.__name);getParam(b,a,"accounts.status",/Статус[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.balance",/<span[^>]+list-amount-value[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["accounts.currency","accounts.balance"],/<span[^>]+list-amount-currency[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.available",/Доступные средства[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.blocked",/Сумма в блоке[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.bonus",/Остаток бонусов[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.limit",/Кредитный лимит[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(b,
a)}
function processCards(b,a){if(AnyBalance.isAvailable("cards")){AnyBalance.trace("Получаем карты");/cards-list-title/i.test(b)||(b=AnyBalance.requestGet(baseurl+"services/CARDS_ACCOUNTS_WB",g_headers));var c=getElements(b,/<li[^>]+slide-list-account-item[^>]*>/i);if(c.length){AnyBalance.trace("Найдено карточных счетов: "+c.length);a.cards=[];for(var f=0;f<c.length;++f){var e=c[f],d=getElement(e,/<span[^>]+contract-number[^>]*>/i,replaceTagsAndSpaces);if(e=getElement(e,/<ul[^>]+cards-accounts-list[^>]*>/i))for(var e=getElements(e,
/<li[^>]+slide-list-item[^>]*>/i),h=0;h<e.length;++h){var k=e[f],g=getElement(k,/<span[^>]+contract-number[^>]*>/i,replaceTagsAndSpaces),l=getParam(k,null,null,/icon_PaymentSystem_([^"\s]*)/i,replaceHtmlEntities),m=g,l=capitalFirstLetters(l)+" "+m,g={__id:g,__name:l,num:m,accnum:d};__shouldProcess("cards",g)&&processCard(k,g);a.cards.push(g)}else AnyBalance.trace("У счета "+d+" нет карт")}}else/У вас нет счетов/i.test(b)?(AnyBalance.trace("У вас нет карточных счетов"),a.accounts=[]):(AnyBalance.trace(b),
AnyBalance.trace("Не удалось найти список карточных счетов."))}}
function processCard(b,a){AnyBalance.trace("Обработка карты "+a.__name);getParam(b,a,"cards.status",/Статус[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"cards.balance",/<span[^>]+list-amount-value[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["cards.currency","cards.balance"],/<span[^>]+list-amount-currency[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces);getParam(b,a,"cards.available",/Доступные средства[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.blocked",/Сумма в блоке[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.bonus",/Остаток бонусов[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.holder",/Имя и Фамилия на карте[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces);getParam(b,a,"cards.till",/Срок действия[\s\S]*?<div[^>]+property-value[^>]*>([\s\S]*?)<\/div>/i,
replaceTagsAndSpaces,parseDateWord);getParam(b,a,"cards.ps",/icon_PaymentSystem_([^"\s]*)/i,replaceHtmlEntities);AnyBalance.isAvailable("cards.transactions")&&processCardTransactions(b,a)}
function processInfo(b,a){AnyBalance.isAvailable("info")&&(a.info={},/cards-list-title/i.test(b)||(b=AnyBalance.requestGet(baseurl+"services/CARDS_ACCOUNTS_WB",g_headers)),getParam(b,a.info,"info.fio",/<span[^>]+header-user-name[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces),AnyBalance.isAvailable("info.passport","info.passport_where","info.address","info.inn")&&processInfoExtended(b,a))};
