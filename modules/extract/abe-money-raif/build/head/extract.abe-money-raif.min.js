var g_headers={Accept:"text/xml","Content-Type":"text/xml",Connection:"keep-alive","User-Agent":"Dalvik/1.6.0 (Linux; U; Android 4.4.2; sdk Build/KK) Android/3.0.2(302)"},baseurl="https://connect.raiffeisen.ru/Mobile-WS/services/",g_xml_login='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:login><login>%LOGIN%</login><password>%PASSWORD%</password></ser:login></soapenv:Body></soapenv:Envelope>',
g_xml_accounts='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:GetAccounts /></soapenv:Body></soapenv:Envelope>',g_xml_cards='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:GetCards /></soapenv:Body></soapenv:Envelope>',
g_xml_loans='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:GetLoans /></soapenv:Body></soapenv:Envelope>',g_xml_deposits='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:GetDeposits /></soapenv:Body></soapenv:Envelope>',
g_xml_UITAccounts='<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsd="http://entry.rconnect/xsd" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.rconnect" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soapenv:Header /><soapenv:Body><ser:GetUITAccounts /></soapenv:Body></soapenv:Envelope>';
function login(a,b){function e(a){var b={"logins.password.incorrect":"Неправильный логин или пароль","profile.login.first_entry":"Это ваш первый вход в Райффайзен.Connect. Пожалуйста, зайдите в https://connect.raiffeisen.ru через браузер и установите постоянный пароль","profile.login.expired":"Уважаемый клиент, срок действия Вашего пароля истёк, так как Вы не меняли Ваше имя пользователя и/или пароль в течение последних 180 дней. Для доступа к системе требуется изменить ваше имя пользователя и/или пароль на новые значения."};
if(b[a])return b[a];AnyBalance.trace("Неизвестная ошибка: "+a);return a}function c(a){return a.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;")}checkEmpty(a.login,"Введите логин в интернет-банк!");checkEmpty(a.password,"Введите пароль в интернет-банк!");AnyBalance.setDefaultCharset("utf-8");var d,f=0;do try{d=AnyBalance.requestPost(baseurl+"RCAuthorizationService",g_xml_login.replace(/%LOGIN%/g,c(a.login)).replace(/%PASSWORD%/g,c(a.password)),addHeaders({SOAPAction:""}));
break}catch(g){if(/SSLHandshakeException/i.test(g.message)){if(10>++f){AnyBalance.trace("Райффайзен дурит, выдаёт ошибку SSL. Пробуем ещё раз (попытка "+(f+1)+")");continue}AnyBalance.trace("За "+f+" попыток не удалось соединиться...")}throw g;}while(1);if(!/loginResponse/i.test(d)){if(a=getParam(d,null,null,/<faultstring>([\s\S]*?)<\/faultstring>/i,replaceTagsAndSpaces))if(a=e(a))throw new AnyBalance.Error(a,null,/Неправильный логин или пароль|срок действия Вашего пароля истёк/i.test(a));AnyBalance.trace(d);
throw new AnyBalance.Error("Не удалось зайти в интернет банк. Обратитесь к разработчикам.");}AnyBalance.isAvailable("info")&&(b.info={},getParam(d,b.info,"info.fio",/<name>([\s\S]*?)<\/name>/i,replaceTagsAndSpaces,capitalFirstLetters),getParam(d,b.info,"info.passport",/<passportnumber>([\s\S]*?)<\/passportnumber>/i,replaceTagsAndSpaces),getParam(d,b.info,"info.passportissuer",/<passportissuer>([\s\S]*?)<\/passportissuer>/i,replaceTagsAndSpaces),getParam(d,b.info,"info.passportissuedate",/<passportissuedate>([\s\S]*?)<\/passportissuedate>/i,
replaceTagsAndSpaces,parseDateISO),getParam(d,b.info,"info.login",/<login>([\s\S]*?)<\/login>/i,replaceTagsAndSpaces));return d}
function processCards(a,b){if(isAvailable("cards")){a=AnyBalance.requestPost(baseurl+"RCCardService",g_xml_cards,addHeaders({SOAPAction:""}));a=getElements(a,/<return>/ig);AnyBalance.trace("Найдено карт: "+a.length);b.cards=[];for(var e=0;e<a.length;++e){var c=getParam(a[e],null,null,/<id>([\s\S]*?)<\/id>/i,replaceTagsAndSpaces),d=getParam(a[e],null,null,/<number>([\s\S]*?)<\/number>/i,replaceTagsAndSpaces),c={__id:c,__name:d};__shouldProcess("cards",c)&&processCard(a[e],c);b.cards.push(c)}}}
function processCard(a,b){function e(a){return isAvailable(a)&&!isset(b[a])}var c=getParam(a,null,null,/<balance>([\s\S]*?)<\/balance>/i,replaceTagsAndSpaces,parseBalance);getParam(c,b,"cards.balance");getParam(a,b,"cards.currency cards.balance cards.minpay cards.limit cards.totalCreditDebtAmount cards.blocked".split(" "),/<currency>([\s\S]*?)<\/currency>/i,replaceTagsAndSpaces,toUpperCaseMy);getParam(a,b,"cards.minpay",/<minimalCreditPayment>([\s\S]*?)<\/minimalCreditPayment>/i,replaceTagsAndSpaces,
parseBalance);getParam(a,b,"cards.limit",/<creditLimit>([\s\S]*?)<\/creditLimit>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"cards.blocked",/<holdedFunds>([\s\S]*?)<\/holdedFunds>/i,replaceTagsAndSpaces,parseBalance);var d=getParam(a,null,null,/<accountType>([\s\S]*?)<\/accountType>/i,replaceTagsAndSpaces,parseBalance);getParam(d,b,"cards.type_code");getParam(a,b,"cards.type",/<type>([\s\S]*?)<\/type>/i,replaceTagsAndSpaces);getParam(a,b,"cards.num",/<number>([\s\S]*?)<\/number>/i,replaceTagsAndSpaces);
getParam(a,b,"cards.accnum",/<accountNumber>([\s\S]*?)<\/accountNumber>/i,replaceTagsAndSpaces);getParam(a,b,"cards.minpay_till",/<nextCreditPaymentDate>([\s\S]*?)<\/nextCreditPaymentDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"cards.till",/<expirationDate>([\s\S]*?)<\/expirationDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"cards.status",/<state>([\s\S]*?)<\/state>/i,replaceTagsAndSpaces);getParam(a,b,"cards.name",/<cardName>([\s\S]*?)<\/cardName>/i,replaceTagsAndSpaces,function(b){return b+
" ("+getParam(a,null,null,/<number>([\s\S]*?)<\/number>/i,[replaceTagsAndSpaces,/^[\s\S]*?(\d{4})$/,"$1"])+")"});getParam(a,b,"cards.holder",/<holderName>([\s\S]*?)<\/holderName>/i,replaceTagsAndSpaces);getParam(a,b,"cards.isCorporate",/<isCorporate>([\s\S]*?)<\/isCorporate>/i,replaceTagsAndSpaces,parseBoolean);getParam(a,b,"cards.isMain",/<main>([\s\S]*?)<\/main>/i,replaceTagsAndSpaces,parseBoolean);getParam(a,b,"cards.dateStart",/<openDate>([\s\S]*?)<\/openDate>/i,replaceTagsAndSpaces,parseDateISO);
getParam(a,b,"cards.shortType",/<shortType>([\s\S]*?)<\/shortType>/i,replaceTagsAndSpaces);if("3"==d&&(isAvailable(["cards.totalCreditDebtAmount","cards.clearBalance","cards.own"])||e("cards.limit")||e("cards.minpay"))){var d=AnyBalance.requestPost(baseurl+"RCCardService",'<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://entry.rconnect/xsd" xmlns:ser="http://service.rconnect" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"><soapenv:Header /><soapenv:Body><ser:getCreditStatementPeriods2><cardId>'+
b.__id+"</cardId></ser:getCreditStatementPeriods2></soapenv:Body></soapenv:Envelope>",addHeaders({SOAPAction:""})),f=getElements(d,/<return/ig),g=f[f.length-1],f=getParam(g,null,null,/<id>([\s\S]*?)<\/id>/i,replaceTagsAndSpaces);(g=getParam(g,null,null,/<prime>([\s\S]*?)<\/prime>/i,replaceTagsAndSpaces))&&f?(d=AnyBalance.requestPost(baseurl+"RCCardService",'<?xml version=\'1.0\' encoding=\'UTF-8\' standalone=\'yes\' ?><soapenv:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://entry.rconnect/xsd" xmlns:ser="http://service.rconnect" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"><soapenv:Header /><soapenv:Body><ser:getCurrentCreditStatement><cardId>'+
b.__id+"</cardId><id>"+f+"</id><isPrime>"+g+"</isPrime></ser:getCurrentCreditStatement></soapenv:Body></soapenv:Envelope>",addHeaders({SOAPAction:""})),f=getParam(d,null,null,/<availableCreditLimit>([\s\S]*?)<\/availableCreditLimit>/i,replaceTagsAndSpaces,parseBalance),g=getParam(d,null,null,/<ownFunds>([\s\S]*?)<\/ownFunds>/i,replaceTagsAndSpaces,parseBalance),getParam(f,b,"cards.limit"),getParam(g,b,"cards.own"),getParam(c-f,b,"cards.clearBalance"),getParam(d,b,"cards.totalCreditDebtAmount",/<totalDebtAmount>([\s\S]*?)<\/totalDebtAmount>/i,
replaceTagsAndSpaces,parseBalance),getParam(d,b,"cards.minpay",/<minAmount>([\s\S]*?)<\/minAmount>/i,replaceTagsAndSpaces,parseBalance),getParam(d,b,"cards.gracePeriodOutstanding",/<gracePeriodOutstanding>([\s\S]*?)<\/gracePeriodOutstanding>/i,replaceTagsAndSpaces,parseBalance),getParam(d,b,"cards.gracepay",/<unpaidGracePeriodDue>([\s\S]*?)<\/unpaidGracePeriodDue>/i,replaceTagsAndSpaces,parseBalance),getParam(d,b,"cards.gracepay_till",/<gracePeriodEnd>([\s\S]*?)<\/gracePeriodEnd>/i,replaceTagsAndSpaces,
parseDateISO)):(AnyBalance.trace("Не удалось найти доп информацию по карте "+b.__name),AnyBalance.trace(d))}"undefined"!=typeof processCardTransactions&&processCardTransactions(a,b)}
function processAccounts(a,b){if(isAvailable("accounts")){a=AnyBalance.requestPost(baseurl+"RCAccountService",g_xml_accounts,addHeaders({SOAPAction:""}));a=getElements(a,/<return>/ig);AnyBalance.trace("Найдено счетов: "+a.length);b.accounts=[];for(var e=0;e<a.length;++e){var c=getParam(a[e],null,null,/<id>([\s\S]*?)<\/id>/i,replaceTagsAndSpaces),d=getParam(a[e],null,null,/<number>([\s\S]*?)<\/number>/i,replaceTagsAndSpaces),c={__id:c,__name:d};__shouldProcess("accounts",c)&&processAccount(a[e],c);
b.accounts.push(c)}}}
function processAccount(a,b){getParam(a,b,"accounts.balance",/<balance>([\s\S]*?)<\/balance>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"accounts.blocked",/<heldFunds>([\s\S]*?)<\/heldFunds>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,["accounts.currency","accounts.minpay","accounts.limit","accounts.balance"],/<currency>([\s\S]*?)<\/currency>/i,replaceTagsAndSpaces,toUpperCaseMy);getParam(a,b,"accounts.num",/<number>([\s\S]*?)<\/number>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.minpay_till",
/<nextCreditPaymentDate>([\s\S]*?)<\/nextCreditPaymentDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"accounts.minpay",/<minimalCreditPayment>([\s\S]*?)<\/minimalCreditPayment>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"accounts.limit",/<creditLimit>([\s\S]*?)<\/creditLimit>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"accounts.till",/<closeDate>([\s\S]*?)<\/closeDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"accounts.date_start",/<openDate>([\s\S]*?)<\/openDate>/i,
replaceTagsAndSpaces,parseDateISO);getParam(a,b,"accounts.accountSubtypeName",/<accountSubtypeName>([\s\S]*?)<\/accountSubtypeName>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.type",/<type>([\s\S]*?)<\/type>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.region",/<region>([\s\S]*?)<\/region>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.owner_id",/<owner_id>([\s\S]*?)<\/owner_id>/i,replaceTagsAndSpaces);getParam(a,b,"accounts.branchId",/<branchId>([\s\S]*?)<\/branchId>/i,replaceTagsAndSpaces);
"undefined"!=typeof processAccountTransactions&&processAccountTransactions(a,b)}
function processDeposits(a,b){if(isAvailable("deposits")){a=AnyBalance.requestPost(baseurl+"RCDepositService",g_xml_deposits,addHeaders({SOAPAction:""}));a=getElements(a,/<return>/ig);AnyBalance.trace("Найдено депозитов: "+a.length);b.deposits=[];for(var e=0;e<a.length;++e){var c=getParam(a[e],null,null,/<id>([\s\S]*?)<\/id>/i,replaceTagsAndSpaces),d=getParam(a[e],null,null,/<accountNumber>([\s\S]*?)<\/accountNumber>/i,replaceTagsAndSpaces),c={__id:c,__name:d};__shouldProcess("deposits",c)&&processDeposit(a[e],
c);b.deposits.push(c)}}}
function processDeposit(a,b){getParam(a,b,"deposits.num",/<accountNumber>([\s\S]*?)<\/accountNumber>/i,replaceTagsAndSpaces);getParam(a,b,"deposits.balance",/<initialAmount>([\s\S]*?)<\/initialAmount>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.currentAmount",/<currentAmount>([\s\S]*?)<\/currentAmount>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,["deposits.currency","deposits.balance","deposits.currentAmount"],/<currency>[^<]*?([^<\.]*?)<\/currency>/i,replaceTagsAndSpaces,toUpperCaseMy);
getParam(a,b,"deposits.pct",/<interestRate>([\s\S]*?)<\/interestRate>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.period",/<daysQuantity>([\s\S]*?)<\/daysQuantity>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.pcts",/<totalInterest>([\s\S]*?)<\/totalInterest>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"deposits.till",/<closeDate>([\s\S]*?)<\/closeDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"deposits.date_start",/<openDate>([\s\S]*?)<\/openDate>/i,replaceTagsAndSpaces,
parseDateISO);getParam(a,b,"deposits.capitalization",/<capitalization>([\s\S]*?)<\/capitalization>/i,replaceTagsAndSpaces,parseBoolean);getParam(a,b,"deposits.name",/<names>([\s\S]*?)<\/names>/i,replaceTagsAndSpaces)}
function processLoans(a,b){if(isAvailable("credits")){a=AnyBalance.requestPost(baseurl+"RCLoanService",g_xml_loans,addHeaders({SOAPAction:""}));a=getElements(a,/<return>/ig);AnyBalance.trace("Найдено кредитов: "+a.length);b.credits=[];for(var e=0;e<a.length;++e){var c=getParam(a[e],null,null,/<id>([\s\S]*?)<\/id>/i,replaceTagsAndSpaces),c={__id:c,__name:"Кредит "+c,num:c};__shouldProcess("credits",c)&&processLoan(a[e],c);b.credits.push(c)}}}
function processLoan(a,b){getParam(a,b,"credits.pct",/<intrestRate>([\s\S]*?)<\/intrestRate>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.limit",/<loanAmount>([\s\S]*?)<\/loanAmount>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.balance",/<paymentRest>([\s\S]*?)<\/paymentRest>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.minpay",/<nextPaymentAmount>([\s\S]*?)<\/nextPaymentAmount>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.paid",/<paidLoanAmount>([\s\S]*?)<\/paidLoanAmount>/i,
replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.paidLoanIntrest",/<paidLoanIntrest>([\s\S]*?)<\/paidLoanIntrest>/i,replaceTagsAndSpaces,parseBalance);getParam(a,b,"credits.currency credits.limit credits.balance credits.paid credits.paidLoanIntrest credits.minpay".split(" "),/<currency>[^<]*?([^<\.]*?)<\/currency>/i,replaceTagsAndSpaces,toUpperCaseMy);getParam(a,b,"credits.minpay_till",/<nextPaymentDate>([\s\S]*?)<\/nextPaymentDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"credits.till",
/<closeDate>([\s\S]*?)<\/closeDate>/i,replaceTagsAndSpaces,parseDateISO);getParam(a,b,"credits.date_start",/<openDate>([\s\S]*?)<\/openDate>/i,replaceTagsAndSpaces,parseDateISO);"undefined"!=typeof processLoanTransactions&&processLoanTransactions(a,b)}function sortByKey(a,b){return a.sort(function(a,c){a=a[b];c=c[b];return a>c?-1:a<c?1:0})}
function getFormattedDate(a){var b=new Date,e=10>b.getDate()?"0"+b.getDate():b.getDate(),c=10>b.getMonth()+1?"0"+(b.getMonth()+1):b.getMonth()+1;return(isset(a)?b.getFullYear()-a:b.getFullYear())+"-"+c+"-"+e}function parseBoolean(a){return"true"===a}function toUpperCaseMy(a){return(a+"").toUpperCase()};
