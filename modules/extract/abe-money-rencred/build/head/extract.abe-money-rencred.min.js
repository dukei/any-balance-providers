var g_rootrul="https://ib.rencredit.ru",g_baseurl=g_rootrul+"/rencredit.server.portal.app/rest/",g_headers={Accept:"application/json, text/*","Accept-Language":"ru, en","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",Referer:g_rootrul+"/",Origin:g_rootrul,"X-Requested-With":"XMLHttpRequest"};
function checkAPIResultSimple(a){if(!a)return a;a=getJson(a);if(a.errorResponseMo){var b=a.errorResponseMo.errorMsg;if(b)throw new AnyBalance.Error(b,null,/парол/i.test(b));AnyBalance.trace(JSON.stringify(a));throw new AnyBalance.Error("Не удалось зайти в интернет-банк. Сайт изменен?");}return a}function callAPI(a,b,c){return callAPIEx(a,b,c,null,checkAPIResultSimple)}
function callAPIEx(a,b,c,d,e){a=g_baseurl+a;var h="GET";b&&(a+="?"+createUrlEncodedParams(b));b=c&&c.__paramsAreNotJson;c?h="POST":c="";var f={"X-XSRF-TOKEN":callAPI.data&&callAPI.data.csrfToken};c&&!b&&(f["Content-Type"]="application/json; charset=utf-8");d&&(f=addHeaders(d,f));var g=0;do 0<g&&(AnyBalance.trace("Retrying request: "+g+"/3"),AnyBalance.sleep(1E3)),d=AnyBalance.requestPost(a,"string"==typeof c||b?c:JSON.stringify(c),addHeaders(f),{HTTP_METHOD:h});while(500<=AnyBalance.getLastStatusCode()&&
503>=AnyBalance.getLastStatusCode()&&3>++g);return(e||getJson)(d)}
function login(){var a=AnyBalance.getPreferences();AnyBalance.setDefaultCharset("utf-8");checkEmpty(a.login,"Введите логин!");checkEmpty(a.password,"Введите пароль!");var b;callAPI("public/version");callAPI.data={};callAPI.data.csrfToken=AnyBalance.getCookie("XSRF-TOKEN");b=callAPI("private/client/info");if(401==AnyBalance.getLastStatusCode()){AnyBalance.trace("Необходим новый логин");b=callAPI("public/auth/login",null,{username:a.login,password:a.password,__paramsAreNotJson:!0});if(b.changePasswordRequired)throw new AnyBalance.Error("Банк требует сменить пароль. Пожалуйста, войдите в интернет банк "+
g_rootrul+" через браузер, смените пароль и введите новый пароль в настройки провайдера",null,!0);b=callAPI("private/client/info")}if(!b.clientInfo){if(a=b.errorResponseMo&&b.errorResponseMo.errorMsg)throw new AnyBalance.Error(a,null,/парол/i.test(a));AnyBalance.trace(JSON.stringify(b));throw new AnyBalance.Error("Не удалось зайти в интернет-банк. Сайт изменен?");}b=b.clientInfo;__setLoginSuccessful();return b}
function fetchProductsJson(a){var b={card:{verb:"private/products/cards",name:"карты",firstTimeParams:{forceRequest:"true"}},loan:{verb:"private/products/loans",name:"кредиты"},account:{verb:"private/products/accounts",name:"счета"},deposit:{verb:"private/products/deposits",name:"депозиты"}};if(!b[a])throw new AnyBalance.Error("Неправильный продукт!",null,!0);fetchProductsJson.data||(fetchProductsJson.data={});if(fetchProductsJson.data[a])return fetchProductsJson.data[a];var c=0,d;do 0<c&&(AnyBalance.trace("Пытаемся получить "+
b[a].name+", попытка "+(c+1)+"/20"),AnyBalance.sleep(2E3)),d=callAPI(b[a].verb,0==c?b[a].firstTimeParams:null);while(!d.items&&20>++c);return fetchProductsJson.data[a]=d}
function processCards(a){if(AnyBalance.isAvailable("cards")){var b=fetchProductsJson("card");a.cards=[];for(var c=0;c<b.items.length;++c){var d=b.items[c];if("LOY"!=d.cardType.code){var e={__id:d.contractNumber+"_"+d.cardNumber.substr(-4),__name:d.cardType.localizedText+", "+d.cardNumber,num:d.cardNumber};__shouldProcess("cards",e)&&processCard(d,e);a.cards.push(e)}}}}
function processBonus(a){if(AnyBalance.isAvailable("bonus"))for(var b=fetchProductsJson("card"),c=0;c<b.items.length;++c){var d=b.items[c];"LOY"==d.cardType.code&&getParam(d.availableAmount.amount,a,"bonus")}}
function processCard(a,b){getParam(a.availableAmount.amount,b,"cards.balance");getParam(a.availableAmount.currency.code,b,"cards.currency cards.balance cards.minpay cards.limit cards.own cards.blocked cards.cash".split(" "));getParam(a.cardType.localizedText,b,"cards.type");getParam(a.cardType.code,b,"cards.type_code");getParam(a.status.localizedText,b,"cards.status");getParam(a.status.code,b,"cards.status_code");getParam(a.lastPayPeriodMinimumPayment,b,"cards.minpay");getParam(a.creditLimit,b,"cards.limit");
getParam(a.ownFundsAmount,b,"cards.own");getParam(a.blockedAmount,b,"cards.blocked");getParam(a.payPeriodDateOfCompletion,b,"cards.minpaytill",null,null,parseDateISO);getParam(a.accountNumber,b,"cards.accnum");getParam(a.contractNumber,b,"cards.contract");getParam(a.productType,b,"cards.type_product");AnyBalance.isAvailable("cards.transactions")&&processCardsTransactions(a,b)}
function processCredits(a){if(AnyBalance.isAvailable("credits")){var b=fetchProductsJson("loan");a.credits=[];for(var c=0;c<b.items.length;++c){var d=b.items[c],e={__id:d.contractNumber,__name:d.loanName+", "+d.contractNumber,num:d.contractNumber};__shouldProcess("credits",e)&&processCredit(d,e);a.credits.push(e)}}}
function processCredit(a,b){getParam(a.balance,b,"credits.balance");getParam(a.loanAmount.currency.code,b,["credits.currency","credits.balance","credits.minpay","credits.limit"]);getParam(a.loanName,b,"credits.name");getParam(a.nextPaymentAmount,b,"credits.minpay");getParam(a.nextPaymentDate,b,"credits.minpay_till",null,null,parseDateISO);getParam(a.openingDate,b,"credits.date_start",null,null,parseDateISO);getParam(a.status.localizedText,b,"credits.status");getParam(a.status.code,b,"credits.status_code");
getParam(a.accountNumber,b,"credits.accnum");getParam(a.closingDate,b,"credits.date_end",null,null,parseDateISO);getParam(a.loanAmount.amount,b,"credits.limit");getParam(a.term,b,"credits.period");getParam(a.rate,b,"credits.pct");if(AnyBalance.isAvailable("credits.transactions"))try{processCreditsTransactions(a,b)}catch(c){AnyBalance.trace("Не удалось получить транзакции по кредиту: "+c.message)}if(AnyBalance.isAvailable("credits.schedule"))try{processCreditsSchedule(a,b)}catch(c){AnyBalance.trace("Не удалось получить расписание по кредиту: "+
c.message)}}function processInfo(a,b){b=b.info={};getParam(a.surname+" "+a.name+" "+a.patronymic,b,"info.fio");getParam(a.surname,b,"info.name_last");getParam(a.patronymic,b,"info.name_patronymic");getParam(a.name,b,"info.name");getParam(a.maskedHomeNumber,b,"info.hphone");getParam(a.maskedPhoneNumber,b,"info.mphone");getParam(a.maskedOfficePhone,b,"info.wphone");getParam(a.email,b,"info.email")};
