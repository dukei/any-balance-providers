var g_headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Charset":"windows-1251,utf-8;q=0.7,*;q=0.3","Accept-Language":"ru-RU,ru;q=0.8,en-US;q=0.6,en;q=0.4",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36"},nodeUrl="";function isLoggedIn(b){return/accountSecurity.do/i.test(b)}
function getLoggedInHtml(b){var a=nodeUrl||"https://node1.online.sberbank.ru",c=AnyBalance.requestGet(a+"/PhizIC/private/userprofile/userSettings.do",g_headers);if(isLoggedIn(c))return nodeUrl=a,c;b&&AnyBalance.trace("Last chance logging in failed: "+c);return c}
function login(b){AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Пожалуйста, укажите логин для входа в Сбербанк-Онлайн!");checkEmpty(b.password,"Пожалуйста, укажите пароль для входа в Сбербанк-Онлайн!");var a=getLoggedInHtml();if(isLoggedIn(a))return AnyBalance.trace("Уже залогинены, используем текущую сессию"),a;AnyBalance.setDefaultCharset("windows-1251");a=AnyBalance.requestPost("https://online.sberbank.ru/CSAFront/login.do",{"field(login)":b.login,"field(password)":b.password.substr(0,
30),operation:"button.begin"},addHeaders({Referer:"https://online.sberbank.ru/CSAFront/login.do","X-Requested-With":"XMLHttpRequest",Origin:"https://online.sberbank.ru"}));AnyBalance.setDefaultCharset("utf-8");if(b=getParam(a,null,null,/<h1[^>]*>О временной недоступности услуги[\s\S]*?<p[^>]*>([\s\S]*?)<\/p>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(b);if(b=getParam(a,null,null,/в связи с ошибкой в работе системы[\s\S]*?<div[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces))throw new AnyBalance.Error(b);
if(/\$\$errorFlag/i.test(a))throw b=getParam(a,null,null,/([\s\S]*)/,[replaceTagsAndSpaces,/^:/,""]),new AnyBalance.Error(b,null,/Ошибка идентификации/i.test(b));b=getParam(a,null,null,/value\s*=\s*["'](https:[^'"]*?AuthToken=[^'"]*)/i);if(!b){if(/Выберите один идентификатор/i.test(a))throw new AnyBalance.Error("Сбербанк сообщает, что Вы несколько раз зарегистрированы в Сбербанк Онлайн. Для работы провайдера, Вам необходимо войти в Сбербанк Онлайн через браузер и выбрать единственный логин.");AnyBalance.trace(a);
throw new AnyBalance.Error("Не удаётся найти ссылку на информацию. Пожалуйста, обратитесь к разработчикам для исправления ситуации.");}AnyBalance.trace("About to authorize: "+b);if(/online.sberbank.ru\/PhizIC/.test(b))a=doNewAccount(b);else{if(/Off_Service/i.test(b))throw new AnyBalance.Error("В настоящее время услуга Сбербанк ОнЛ@йн временно недоступна по техническим причинам. Сбербанк приносит свои извинения за доставленные неудобства.");AnyBalance.trace(a);throw new AnyBalance.Error("К сожалению, ваш вариант Сбербанка-онлайн пока не поддерживается. Пожалуйста, обратитесь к разработчикам для исправления ситуации.");
}__setLoginSuccessful();return a}function checkNext(b){"next"==(b||"").trim()&&(AnyBalance.trace("У нас next, обновляем страницу."),b=getLoggedInHtml());return b}
function checkAdditionalQuestions(b,a){/internetSecurity/.test(b)&&(AnyBalance.trace("Требуется принять соглашение о безопасности... Принимаем..."),b=AnyBalance.requestPost(a+"/PhizIC/internetSecurity.do",{"field(selectAgreed)":"on",PAGE_TOKEN:getParamByName(b,"PAGE_TOKEN"),operation:"button.confirm"},addHeaders({Referer:a,"X-Requested-With":"XMLHttpRequest"})));b=checkNext(b);/Откроется справочник регионов, в котором щелкните по названию выбранного региона/.test(b)&&(AnyBalance.trace("Выбираем все регионы оплаты..."),
b=AnyBalance.requestPost(a+"/PhizIC/region.do",{id:-1,operation:"button.save"},addHeaders({Referer:a,"X-Requested-With":"XMLHttpRequest"})));checkNext(b)}
function doNewAccount(b){var a=AnyBalance.requestGet(b,addHeaders({Referer:c})),c=getParam(b,null,null,/^(https?:\/\/.*?)\//i);nodeUrl=c;a||(AnyBalance.trace("Почему-то получили пустую страницу... Попробуем ещё раз"),a=AnyBalance.requestGet(b,addHeaders({Referer:c})));/StartMobileBankRegistrationForm/i.test(a)&&(a=getParamByName(a,"PAGE_TOKEN"),checkEmpty(a,"Попытались отказаться от подключения мобильного банка, но не удалось найти PAGE_TOKEN!",!0),a=AnyBalance.requestPost(nodeUrl+"/PhizIC/login/register-mobilebank/start.do",
{PAGE_TOKEN:a,operation:"skip"},addHeaders({Referer:c})));/Ранее вы[^<]*уже создали свой собственный логин для входа/i.test(a)&&checkEmpty(null,getParam(a,null,null,/Ранее вы[^<]*уже создали свой собственный логин для входа[^<]*/i,replaceTagsAndSpaces));if(/PhizIC/.test(a)){AnyBalance.trace("Entering physic account...: "+c);/confirmTitle/.test(a)&&(b=a,a=getElement(a,/<div[^>]+clickConfirm[^>]+buttonGreen[^>]*>/i)||"",/confirmSMS/i.test(a)?AnyBalance.trace("Запрошен смс-пароль..."):/confirmCard/i.test(a)?
(AnyBalance.trace("Запрошен пароль с чека. Это неудобно, запрашиваем пароль по смс."),AnyBalance.requestPost(c+"/PhizIC/async/confirm.do",{PAGE_TOKEN:getParamByName(b,"PAGE_TOKEN"),operation:"button.confirmSMS"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"}))):AnyBalance.trace("Неизвестное подтверждение: "+a+". Надеемся, это смс."),a=AnyBalance.retrieveCode("Для входа в интернет банк, пожалуйста, введите одноразовый пароль, который выслан вам по СМС.\n\nЕсли вы не хотите постоянно вводить СМС-пароли при входе, вы можете отменить их в настройках вашего Сбербанк-онлайн. Это безопасно - для совершения денежных операций требование одноразового пароля всё равно останется",
null,{time:3E5}),a=AnyBalance.requestPost(c+"/PhizIC/async/confirm.do",{receiptNo:"",passwordsLeft:"",passwordNo:"",SID:"",$$confirmSmsPassword:a,PAGE_TOKEN:getParamByName(b,"PAGE_TOKEN"),operation:"button.confirm"},addHeaders({Referer:c,"X-Requested-With":"XMLHttpRequest"})),a=checkNext(a));if(!isLoggedIn(a)&&(b=getElement(a,/<div[^>]+warningMessages[^>]*>/i,[replaceTagsAndSpaces,/Получите новый пароль, нажав.*/i,""])))throw new AnyBalance.Error(b);checkAdditionalQuestions(a,c);if(!isLoggedIn(a)){c=
getLoggedInHtml(!0);if(!isLoggedIn(c))throw AnyBalance.trace("html: "+a),new AnyBalance.Error("Не удалось зайти в Cбербанк-онлайн. Сайт изменен?");a=c}}else{if(400<=AnyBalance.getLastStatusCode())throw AnyBalance.trace(a),new AnyBalance.Error("Временные технические проблемы в Сбербанк-онлайн. Пожалуйста, попробуйте ещё раз позже.");AnyBalance.trace(a);throw new AnyBalance.Error("Ваш тип личного кабинета не поддерживается. Свяжитесь, пожалуйста, с разработчиками.");}return a}
function processAccounts(b,a){if(AnyBalance.isAvailable("accounts")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/list.do",g_headers);var c=getParamByName(b,"PAGE_TOKEN");b=getElements(b,/<div[^>]+class="productCover[^"]*Product[^>]*">/ig,g_headers);AnyBalance.trace("Найдено счетов: "+b.length);a.accounts=[];for(var d=0;d<b.length;++d){var e=b[d],f=getParam(e,null,null,/<div[^>]+id="account_(\d+)/i),g=getElement(e,/<div[^>]+productName[^>]*>/i,replaceTagsAndSpaces),h=getParam(e,null,
null,/<[^>]*class="productNumber\b[^"]*">([^<]+)/i,replaceTagsAndSpaces);h?h=getParam(e,null,null,/№([^,]*)/i):(AnyBalance.trace("Не удаётся найти номер счета "+g+"! Пробуем получить его из расширенной информации."),e=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/bankDetails.do?id="+f,g_headers),h=getParam(e,null,null,/Номер счета:[\s\S]*?<div[^>]+detailsValue[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces),AnyBalance.trace("Получен номер: "+h));f={__id:f,__name:g,num:h};__shouldProcess("accounts",
f)&&processAccount(b[d],f,c);a.accounts.push(f)}}}function parseAllow(b){return/разрешено/i.test(b)}
function processAccount(b,a,c){AnyBalance.trace("Обработка счета "+a.__name);/thermometertargetTemplate/i.test(b)?(getParam(b,a,"accounts.balance",/dribbleCenter\b[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.pct",/ставка:\s*([\d.,]+%)/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,["accounts.currency","accounts.balance"],/dribbleCenter\b[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseCurrency),getParam(b,a,"accounts.till",/Дата покупки\s*<span[^>]*>([\s\S]*?)<\/span>/i,
replaceTagsAndSpaces,parseDate)):(getParam(b,a,"accounts.balance",/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.pct",/descriptionRight[^>]*>\s*([\d.,]+%)/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,["accounts.currency","accounts.balance"],/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseCurrency),getParam(b,a,"accounts.till",/<[^>]*class="(?:product|account)Number\b[^"]*">[^<]+,\s+действует (?:до|по)([^<]+)/i,replaceTagsAndSpaces,
parseDateWord));AnyBalance.isAvailable("accounts.num","accounts.period","accounts.balance_min","accounts.pct_conditions","accounts.status","accounts.prolong","accounts.withdraw","accounts.topup")&&(b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/accounts/info.do?id="+a.__id,g_headers),getParam(b,a,"accounts.num",/Номер счета[^<]*:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.period",/Срок вклада:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,
a,"accounts.balance_min",/Сумма неснижаемого остатка:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"accounts.pct_conditions",/Порядок уплаты процентов:[\s\S]*?<td[^>]*>([\s\S]*?)(?:<\/td>|<script)/i,replaceTagsAndSpaces),getParam(b,a,"accounts.status",/Текущее состояние:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.prolong",/Пролонгация:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"accounts.withdraw",
/Списание:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseAllow),getParam(b,a,"accounts.topup",/Зачисление:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseAllow));AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(c,a)}
function processCards(b,a){if(AnyBalance.isAvailable("cards")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/cards/list.do");b=getElements(b,/<div[^>]+class="productCover[^"]*(?:activeProduct|errorProduct)[^>]*">/ig);AnyBalance.trace("Найдено карт: "+b.length);a.cards=[];for(var c=0;c<b.length;++c){var d=getParam(b[c],null,null,/<div[^>]+id="card_(\d+)/i),e=getParam(b[c],null,null,/<[^>]*class="accountNumber\b[^"]*">([^<]+)/i,replaceTagsAndSpaces),d={__id:d,__name:e};__shouldProcess("cards",d)&&
processCard(b[c],d);a.cards.push(d)}}}
function processCard(b,a){var c=a.__id;AnyBalance.trace("Обработка карты "+a.__name);getParam(b,a,"cards.balance",/productAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.currency cards.balance cards.cash cards.electrocash cards.debt cards.maxlimit".split(" "),/overallAmount\b[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"cards.cardNumber",/<[^>]*class="accountNumber\b[^"]*">([^<,]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.till",
/<[^>]*class="accountNumber\b[^"]*">[^<]+,\s+действует (?:до|по)([^<]+)/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"cards.accnum",/<[^>]*class="accountNumber\b[^"]*">([^<,]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.status",/<[^>]*class="detailStatus\b[^"]*">([^<]+)/i,replaceTagsAndSpaces);getParam(b,a,"cards.is_blocked",/Blocked.jpg/i,null,function(a){return!!a});AnyBalance.isAvailable("cards.userName","cards.own","cards.cash","cards.electrocash","cards.minpay","cards.minpay_till","cards.limit",
"cards.debt","cards.debt_date")&&(b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/cards/detail.do?id="+c),getParam(b,a,"cards.userName",/Держатель карты[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces,capitalFirstLetters),getParam(b,a,"cards.accnum",/Номер счета карты[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/,replaceTagsAndSpaces),getParam(b,a,"cards.cash",/Для снятия наличных[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.electrocash",/для покупок\s*(?::|и платежей)[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,
replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.minpay",/Обязательный платеж[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.minpay_till",/Обязательный платеж, внесите до([^<]*)/,replaceTagsAndSpaces,parseDateWord),getParam(b,a,"cards.limit",/Кредитный лимит[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.own",/Собственные средства[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,
a,"cards.debt",/(?:Общая задолженность|Задолженность\s*<br[^>]*>\s*на сегодня)[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.debt_date",/отчете на ([^<]*)/i,replaceTagsAndSpaces,parseDateWord),getParam(b,a,"cards.gracepay",/Задолженность льготного периода[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"cards.gracepay_till",/Задолженность льготного периода(?:[\s\S](?!<\/tr>))*?внести эту сумму до([^<,]*)/i,replaceTagsAndSpaces,
parseDateWord));AnyBalance.isAvailable("cards.transactions10")&&processCardLast10Transactions(a);AnyBalance.isAvailable("cards.transactions")&&processCardTransactions(a)}
function processLoans(b,a){if(AnyBalance.isAvailable("credits")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/loans/list.do");var c=getElements(b,/<div[^>]+class="productCover[^"]*activeProduct[^>]*">/ig);AnyBalance.trace("Найдено кредитов: "+c.length);a.credits=[];for(var d=0;d<c.length;++d){var e=getParam(c[d],null,null,/id=(\d+)/i),f=getParam(c[d],null,null,/<span[^>]*title="([^"]+)/i,replaceTagsAndSpaces);b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/loans/detail.do?id="+e);var g=getParam(b,
null,null,/Номер ссудного сч[её]та[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),e={__id:e,num:g,__name:f};__shouldProcess("credits",e)&&processLoan(b,e);a.credits.push(e)}}}
function processLoan(b,a){AnyBalance.trace("Обработка кредита "+a.__name);getParam(b,a,"credits.balance",/Осталось (?:погасить|оплатить)[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["credits.currency","credits.balance","credits.limit","credits.minpay"],/Осталось (?:погасить|оплатить)[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseCurrency);getParam(b,a,"credits.minpay_till",/<td[^>]+field[^>]*>\s*Плат[ёе]ж([^<]*)/i,replaceTagsAndSpaces,parseDateWord);
getParam(b,a,"credits.minpay",/<td[^>]+field[^>]*>\s*Плат[ёе]ж[\s\S]*?<td[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"credits.limit",/(?:Сумма кредита|Первоначальная сумма)[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"credits.userName",/<td[^>]+field[^>]*>\s*Заемщик[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,capitalFirstLetters);getParam(b,a,"credits.agreement",/Номер кредитного договора[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,
replaceTagsAndSpaces);getParam(b,a,"credits.return_type",/Способ погашения[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(b,a,"credits.date_start",/Дата открытия[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"credits.till",/Срок окончания кредита[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);getParam(b,a,"credits.place",/Отделение обслуживания кредита[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(b,
a,"credits.pct",/Процентная ставка[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalance)}
function processMetalAccounts(b,a){if(AnyBalance.isAvailable("accounts_met")){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/ima/list.do");var c=getElements(b,/<div[^>]+class="productCover[^"]*activeProduct[^>]*">/ig);AnyBalance.trace("Найдено мет. счетов: "+c.length);a.accounts_met=[];for(var d=0;d<c.length;++d){var e=getParam(c[d],null,null,/id=(\d+)/i),f=getParam(c[d],null,null,/<span[^>]*title="([^"]+)/i,replaceTagsAndSpaces),g=getParam(c[d],null,null,/"productNumberBlock"(?:[^>]*>){2}\s*([^<]+)/i,
[/\D/g,""]),e={__id:e,num:g,__name:f};__shouldProcess("accounts_met",e)&&processMetalAccount(b,e);a.accounts_met.push(e)}}}
function processMetalAccount(b,a){AnyBalance.trace("Обработка металлического счета "+a.__name);getParam(b,a,"accounts_met.weight",/"overallAmount"([^>]*>){2}/i,replaceTagsAndSpaces,parseBalance);getParam("г.",a,["accounts_met.weight_units","accounts_met.weight"]);getParam(b,a,"accounts_met.balance",/По курсу покупки Банка:([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,["accounts_met.currency","accounts_met.balance"],/По курсу покупки Банка:([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,
parseCurrency);getParam(b,a,"accounts_met.date_start",/Открыт:[\s\S]*?<td[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseDateWord);AnyBalance.isAvailable("accounts_met.transactions")&&processMetalAccountTransactions(b,a)}
function processProfile(b,a){AnyBalance.isAvailable("info")&&(AnyBalance.trace("Разбираем профиль..."),a=a.info={},b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/userprofile/userSettings.do"),getParam(b,a,"info.fio",/<span[^>]+"userFIO"[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,capitalFirstLetters),getParam(b,a,"info.hphone",/Домашний телефон:[\s\S]*?<span[^>]+"phoneNumber"[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces),getParam(b,a,"info.phone",/Мобильный телефон:[\s\S]*?<span[^>]+"phoneNumber"[^>]*>([\s\S]*?)<\/span>/i,
replaceTagsAndSpaces),getParam(b,a,"info.mphone",/Мобильный телефон:[\s\S]*?<span[^>]+"phoneNumber"[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces),getParam(b,a,"info.email",/<span[^>]+userEmail[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces),getParam(b,a,"info.passport",/Паспорт гражданина РФ[\s\S]*?<td[^>]+class="docNumber"[^>]*>([\s\S]*?)<\/td>/i,replaceTagsAndSpaces),getParam(b,a,"info.snils",/Страховое свидетельство[\s\S]*?<div[^>]+class="documentNumber"[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces),
getParam(b,a,"info.inn",/<div[^>]*documentTitle[^>]*>\s*ИНН[\s\S]*?<div[^>]+class="documentNumber"[^>]*>([\s\S]*?)<\/div>/i,replaceTagsAndSpaces))}function sortObject(b,a){return b.sort(function(b,d){return b[a]>d[a]?-1:b[a]<d[a]?1:0})}function getFormattedDate(b){var a=new Date,c=10>a.getDate()?"0"+a.getDate():a.getDate(),d=10>a.getMonth()+1?"0"+(a.getMonth()+1):a.getMonth()+1;b=isset(b)?a.getFullYear()-b:a.getFullYear();return c+"/"+d+"/"+b}
function getParamByName(b,a){return getParam(b,null,null,new RegExp("name=[\"']"+a+'["\'][^>]*value=["\']([^"\']+)"',"i"))}
function processRates(b,a){AnyBalance.isAvailable("eurPurch","eurSell","usdPurch","usdSell")&&(AnyBalance.trace("Fetching rates..."),b=AnyBalance.requestGet(b+"/PhizIC/private/accounts.do"),getParam(b,a,"eurPurch",/"currencyRateName"[^>]*>\s*Евро(?:[\s\S]*?<div[^>]+rateText[^>]*>){1}([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"eurSell",/"currencyRateName"[^>]*>\s*Евро(?:[\s\S]*?<div[^>]+rateText[^>]*>){2}([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"usdPurch",
/"currencyRateName"[^>]*>\s*Доллар США(?:[\s\S]*?<div[^>]+rateText[^>]*>){1}([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance),getParam(b,a,"usdSell",/"currencyRateName"[^>]*>\s*Доллар США(?:[\s\S]*?<div[^>]+rateText[^>]*>){2}([\s\S]*?)<\/div>/i,replaceTagsAndSpaces,parseBalance))}
function fetchNewThanks(b,a){AnyBalance.trace("Попробуем получить Спасибо от сбербанка...");AnyBalance.isAvailable("spasibo")&&(html=AnyBalance.requestGet(b+"/PhizIC/private/async/loyalty.do"),(b=getParam(html,/^\s*(https?:\/\/\S*)/i,replaceTagsAndSpaces))?(html=AnyBalance.requestGet(b),/Sberbank-spasibo - Подтверждение телефона/i.test(html)?AnyBalance.trace("Не удалось получить баллы спасибо. Для получения баллов необходимо войти в https://bonus-spasibo.ru/ и привязать свой номер телефона"):getParam(html,
a,"spasibo",/<span[^>]*balance__thanks-count[^>]*>([\s\S]*?)<\/span>/i,replaceTagsAndSpaces,parseBalance)):AnyBalance.trace("Не удаётся получить ссылку на спасибо от сбербанка: "+html))}function parseSmallDateSilent(b){return parseSmallDate(b,!0)}function parseSmallDate(b,a){var c=parseSmallDateInternal(b);a||AnyBalance.trace("Parsed small date "+new Date(c)+" from "+b);return c}
function parseSmallDateInternal(b){var a=b.match(/(\d+):(\d+)/)||[,0,0],c=new Date;if(/сегодня/i.test(b))return a=new Date(c.getFullYear(),c.getMonth(),c.getDate(),+a[1],+a[2],0),a.getTime();if(/вчера/i.test(b))return a=new Date(c.getFullYear(),c.getMonth(),c.getDate()-1,+a[1],+a[2],0),a.getTime();if(a=/(\d+)[^\d]+(\d+)/i.exec(b))return b=c.getFullYear(),c.getMonth()+1<+a[2]&&--b,a=new Date(b,+a[2]-1,+a[1]),a.getTime();AnyBalance.trace("Не удалось распарсить дату: "+b)}
function processCardLast10Transactions(b){if(AnyBalance.isAvailable("cards.transactions10")){var a=b.__id;AnyBalance.trace("Получаем последние 10 операций по карте...");html=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/cards/info.do?id="+a);if(/<table[^>]*class="tblInf"/i.test(html)){b.transactions10=[];var c=getElements(html,/<tr[^>]*class="ListLine\d+"/ig);AnyBalance.trace("У карты "+a+" найдено транзакций: "+c.length);for(a=0;a<c.length;++a){var d={};getParam(c[a],d,"cards.transactions10.sum",
/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseBalanceSilent);getParam(c[a],d,"cards.transactions10.currency",/(?:[\s\S]*?<td[^>]*>){3}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseCurrencySilent);getParam(c[a],d,"cards.transactions10.descr",/(?:[\s\S]*?<td[^>]*>){1}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces);getParam(c[a],d,"cards.transactions10.date",/(?:[\s\S]*?<td[^>]*>){2}([\s\S]*?)<\/td>/i,replaceTagsAndSpaces,parseSmallDateSilent);b.transactions10.push(d)}b.transactions10=
sortObject(b.transactions10,"time")}else AnyBalance.trace(html),AnyBalance.trace("Не удалось найти таблицу операций!")}}
function processMetalAccountTransactions(b,a){b=AnyBalance.requestGet(nodeUrl+"/PhizIC/private/async/extract.do?type=ima&id="+a.__id);var c=getElements(b,/<tr[^>]+ListLine[^>]*>/ig);if(c.length)for(a.transactions=[],b=0;b<c.length;b++){var d=c[b],e={};getParam(d,e,"accounts_met.transactions.date",/([^]*?<\/td>){1}/i,replaceTagsAndSpaces,parseDateSilent);getParam(d,e,"accounts_met.transactions.descr",/([^]*?<\/td>){2}/i,replaceTagsAndSpaces);getParam(d,e,"accounts_met.transactions.weight",/([^]*?<\/td>){3}/i,
replaceTagsAndSpaces,parseBalanceSilent);getParam(d,e,"accounts_met.transactions.sum",/([^]*?<\/td>){4}/i,[/<span[^>]+minus-amount[^>]*>/i,"-",replaceTagsAndSpaces],parseBalanceSilent);a.transactions.push(e)}else AnyBalance.trace("Не удалось найти последние транзакции по мет. счету"),AnyBalance.trace(b)};function requestApiLogin(b,a,c){return requestApiInner("https://online.sberbank.ru:4477/CSAMAPI/"+b,a,!1,c)}function requestApi(b,a,c){return requestApiInner("https://node1.online.sberbank.ru:4477/mobile9/"+b,a,!0,c)}
function requestApiInner(b,a,c,d){a=c?a:joinObjects(a,{version:"9.10",appType:"android",appVersion:"7.1.0",deviceName:"AnyBalanceAPI"});a=AnyBalance.requestPost(b,a,{Connection:"keep-alive","User-Agent":"Mobile Device"});b=getParam(a,null,null,/<status>\s*<code>\s*(-?\d+)\s*<\/code>/i,null,parseBalance);if(!/<status>\s*<code>\s*0\s*<\/code>/i.test(a)&&(AnyBalance.trace(a),!d))throw d=sumParam(a,null,null,/<error>\s*<text>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/text>\s*<\/error>/ig,replaceTagsAndSpaces,
null,aggregate_join),d=new AnyBalance.Error(d||"Ошибка при обработке запроса!",null,/неправильный идентификатор|неправильный пароль/i.test(d)),d.code=b,d;return a}function getToken(b){var a=getParam(b,null,null,/<token>([^<]+)<\/token>/i);if(!a)throw AnyBalance.trace(b),new AnyBalance.Error("Не удалось найти токен авторизации, сайт изменен?");return a}function generateHex(b,a){var c=0;return b.replace(/x/ig,function(){return a[c++]})}
function createSdkData(){var b=new Date,a=AnyBalance.getPreferences(),c=hex_md5(a.login+"sdk_data"),d=hex_md5(a.login+"rsa app key").toUpperCase();return{TIMESTAMP:b.getUTCFullYear()+"-"+n2(b.getUTCMonth())+"-"+n2(b.getUTCDate())+"T"+b.getUTCHours()+":"+b.getUTCMinutes()+":"+b.getUTCSeconds()+"Z",HardwareID:generateImei(a.login,"35472406******L"),SIM_ID:generateSimSN(a.login,"2500266********L"),PhoneNumber:"",GeoLocationInfo:[{Longitude:""+(37+Math.random()),Latitude:""+(55+Math.random()),HorizontalAccuracy:"5",
Altitude:""+(150+Math.floor(20*Math.random())),AltitudeAccuracy:"5",Timestamp:""+(b.getTime()-Math.floor(1E6*Math.random())),Heading:""+90*Math.random(),Speed:"3",Status:"3"}],DeviceModel:"D6503",MultitaskingSupported:!0,DeviceName:"Xperia Z2",DeviceSystemName:"Android",DeviceSystemVersion:"22",Languages:"ru",WiFiMacAddress:generateHex("44:d4:e0:xx:xx:xx",c.substr(0,6)),WiFiNetworksData:{BBSID:generateHex("5c:f4:ab:xx:xx:xx",c.substr(6,12)),SignalStrength:""+Math.floor(-30-20*Math.random()),Channel:"null",
SSID:"TPLink"},CellTowerId:""+(12875+Math.floor(1E4*Math.random())),LocationAreaCode:"9722",ScreenSize:"1080x1776",RSA_ApplicationKey:d,MCC:"250",MNC:"02",OS_ID:c.substring(12,16),SDK_VERSION:"2.0.1",Compromised:0,Emulator:0}}
function loginAPI(){var b=AnyBalance.getPreferences();AnyBalance.trace("Входим через API мобильного приложения...");var a=AnyBalance.getData("guid",""),c=AnyBalance.getData("devid","");c||(c=hex_md5(b.login+" "+Math.random()),AnyBalance.setData("devid",c));var d=b.pin||AnyBalance.getData("pin","11223");b.pin||AnyBalance.setData("pin",d);if(a){AnyBalance.trace("Устройство уже привязано!");AnyBalance.trace("guid is: "+a);try{e=requestApiLogin("login.do",{operation:"button.login",mGUID:a,devID:c,password:d,
mobileSdkData:JSON.stringify(createSdkData())})}catch(f){if(7==f.code)AnyBalance.trace(f.message+": Надо перегенерить guid"),a=null;else throw f;}}if(!a){AnyBalance.trace("Необходимо привязать устройство!");var e=requestApiLogin("registerApp.do",{operation:"register",login:b.login,devID:c}),b=getElement(e,/<mGUID>/i,replaceTagsAndSpaces);if(!b)throw AnyBalance.trace(e),new AnyBalance.Error("Не удалось найти токен регистрации, сайт изменен?");AnyBalance.setData("guid",b);AnyBalance.trace("mGUID is: "+
b);e=AnyBalance.retrieveCode("Пожалуйста, введите код из смс, для привязки данного устройства.",null,{time:12E4,inputType:"number"});requestApiLogin("registerApp.do",{operation:"confirm",mGUID:b,smsPassword:e});AnyBalance.trace("Успешно привязали устройство. Создадим PIN...");e=requestApiLogin("registerApp.do",{operation:"createPIN",mGUID:b,password:d,isLightScheme:"true",devID:c,mobileSdkData:JSON.stringify(createSdkData())});AnyBalance.saveData()}c=getToken(e);if(!c)throw AnyBalance.trace(e),new AnyBalance.Error("Не удалось получить токен авторизации. Сайт изменен?");
requestApi("postCSALogin.do",{token:c});return c}var g_products;function getProductsXMLApi(){g_products||(g_products=requestApi("private/products/list.do",{showProductsType:"cards,accounts,imaccounts,loans,deposits"}));return g_products}
function processCardsAPI(b){if(AnyBalance.isAvailable("cards")){var a=getProductsXMLApi();b.cards=[];if(a=getElement(a,/<cards>/i)){a=getElements(a,/<card>/ig);AnyBalance.trace("Найдено "+a.length+" карт");for(var c=0;c<a.length;c++){var d=a[c],e=getElement(d,/<id>/i,replaceTagsAndSpaces),f=getElement(d,/<number>/i,replaceTagsAndSpaces),g=getElement(d,/<name>/i,replaceTagsAndSpaces);AnyBalance.trace("Найдена карта "+f+" ("+g+"), id: "+e);e={__id:e,__name:g+" "+f,cardNumber:f};__shouldProcess("cards",
e)&&(processCardAPI(d,e),b.cards.push(e))}}else AnyBalance.trace("Карты не обнаружены")}}
function processCardAPI(b,a){AnyBalance.trace("Обрабатываем карту "+a.__name);var c=getElement(b,/<availableLimit>/i);getParam(c,a,"cards.balance",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(c,a,["cards.currency","cards.balance"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(b,a,"cards.status",/<state>([\s\S]*?)<\/state>/i,replaceTagsAndSpaces);getParam(b,a,"cards.type",/<type>([\s\S]*?)<\/type>/i,replaceTagsAndSpaces);b=requestApi("private/cards/info.do",
{id:a.__id});getParam(b,a,"cards.cardName",/<holderName>([\s\S]*?)<\/holderName>/i,replaceTagsAndSpaces);c=getElement(b,/<availableCashLimit>/i);getParam(c,a,"cards.cash",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);c=getElement(b,/<purchaseLimit>/i);getParam(c,a,"cards.electrocash",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"cards.accnum",/<accountNumber>([\s\S]*?)<\/accountNumber>/i,replaceTagsAndSpaces);AnyBalance.isAvailable("cards.transactions10")&&
processCardAPITransactions(a)}
function processCardAPITransactions(b){try{var a=requestApi("private/cards/abstract.do",{id:b.__id,count:100,paginationSize:100}),c=getElements(a,/<operation>/ig);AnyBalance.trace("Найдено "+c.length+" последних транзакций");b.transactions=[];for(a=0;a<c.length;a++){var d=c[a],e={};getParam(d,e,"cards.transactions10.date",/<date>([\s\S]*?)<\/date>/i,replaceTagsAndSpaces,parseDate);getParam(d,e,"cards.transactions10.sum",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(d,
e,["cards.transactions10.currency","cards.transactions10.sum"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(d,e,"cards.transactions10.descr",/<description>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/description>/i,replaceTagsAndSpaces);b.transactions.push(e)}}catch(f){AnyBalance.trace("Не удалось получить транзакции для карты "+b.__name+": "+f.message)}}
function processAccountsAPI(b){if(AnyBalance.isAvailable("accounts")){var a=getProductsXMLApi();b.accounts=[];if(a=getElement(a,/<accounts>/i)){a=getElements(a,/<account>/ig);AnyBalance.trace("Найдено "+a.length+" счетов");for(var c=0;c<a.length;c++){var d=a[c],e=getElement(d,/<id>/i,replaceTagsAndSpaces),f=getElement(d,/<number>/i,replaceTagsAndSpaces),g=getElement(d,/<name>/i,replaceTagsAndSpaces),e={__id:e,__name:g+" "+f,num:f};__shouldProcess("accounts",e)&&(processAccountAPI(d,e),b.accounts.push(e))}}else AnyBalance.trace("Счета не обнаружены")}}
function parseBoolAPI(b){return/true/i.test(b)}
function processAccountAPI(b,a){AnyBalance.trace("Обрабатываем счет "+a.__name);var c=getElement(b,/<balance>/i);getParam(c,a,"accounts.balance",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(c,a,["accounts.currency","accounts.balance"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.rate",/<rate>([\s\S]*?)<\/rate>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.till",/<closeDate>([\s\S]*?)<\/closeDate>/i,replaceTagsAndSpaces,
parseDate);getParam(b,a,"accounts.status",/<state>([\s\S]*?)<\/state>/i,replaceTagsAndSpaces);b=requestApi("private/accounts/info.do",{id:a.__id});getParam(b,a,"accounts.period",/<period>([\s\S]*?)<\/period>/i,replaceTagsAndSpaces);getParam(b,a,"accounts.balance_min",/<irreducibleAmt>([\s\S]*?)<\/irreducibleAmt>/i,replaceTagsAndSpaces,parseBalance);getParam(b,a,"accounts.prolong",/<prolongation>([\s\S]*?)<\/prolongation>/i,replaceTagsAndSpaces,parseBoolAPI);AnyBalance.isAvailable("accounts.transactions")&&
processAccountAPITransactions(a)}
function processAccountAPITransactions(b){try{var a=new Date,c=new Date(a.getFullYear()-1,a.getMonth(),a.getDate()),d=requestApi("private/accounts/abstract.do",{id:b.__id,from:fmtDate(c),to:fmtDate(a),paginationSize:1E3,paginationOffset:0}),e=getElements(d,/<operation>/ig);AnyBalance.trace("Найдено "+e.length+" последних транзакций");b.transactions=[];for(a=0;a<e.length;a++){var f=e[a],c={};getParam(f,c,"accounts.transactions10.date",/<date>([\s\S]*?)<\/date>/i,replaceTagsAndSpaces,parseDate);getParam(f,
c,"accounts.transactions10.sum",/<amount>([\s\S]*?)<\/amount>/i,replaceTagsAndSpaces,parseBalance);getParam(f,c,["accounts.transactions10.currency","accounts.transactions10.sum"],/<currency>\s*<code>([\s\S]*?)<\/code>/i,replaceTagsAndSpaces);getParam(f,c,"accounts.transactions10.descr",/<description>\s*(?:<!\[CDATA\[)?([\s\S]*?)(?:\]\]>)?\s*<\/description>/i,replaceTagsAndSpaces);b.transactions.push(c)}}catch(g){AnyBalance.trace("Не удалось получить транзакции для счета "+b.__name+": "+g.message)}}
function processInfoAPI(b){if(AnyBalance.isAvailable("info")){b=b.info={};var a=requestApi("private/profile/info.do"),c=create_aggregate_join(" ");sumParam(a,b,"info.fio",/<firstName>([\s\S]*?)<\/firstName>/i,replaceTagsAndSpaces,null,c);sumParam(a,b,"info.fio",/<patrName>([\s\S]*?)<\/patrName>/i,replaceTagsAndSpaces,null,c);sumParam(a,b,"info.fio",/<surName>([\s\S]*?)<\/surName>/i,replaceTagsAndSpaces,null,c);getParam(a,b,"info.phone",/<mobilePhone>([\s\S]*?)<\/mobilePhone>/i,replaceTagsAndSpaces);
getParam(a,b,"info.email",/<email>([\s\S]*?)<\/email>/i,replaceTagsAndSpaces);for(var a=getElements(a,/<document>/ig),d=0;d<a.length;d++){var e=a[d],f=getElement(e,/<documentName>/i,replaceTagsAndSpaces);/паспорт/i.test(f)?(sumParam(e,b,"info.passport",/<documentSeries>([\s\S]*?)<\/documentSeries>/i,replaceTagsAndSpaces,null,c),sumParam(e,b,"info.passport",/<documentNumber>([\s\S]*?)<\/documentNumber>/i,replaceTagsAndSpaces,null,c)):AnyBalance.trace("Неизвестный документ: "+e)}}}
function processRatesAPI(b){if(isAvailable(["eurPurch","eurSell","usdPurch","usdSell"])){AnyBalance.trace("Fetching rates...");var a=requestApi("private/rates/list.do");getParam(a,b,"eurPurch",/RUB<\/code>\s*<amount>([^<]+)<\/amount>\s*<\/from>\s*<to>\s*<code>EUR/i,null,parseBalance);getParam(a,b,"eurSell",/EUR<\/code>\s*<\/from>\s*<to>\s*<code>RUB<\/code>([\s\S]*?)<\//i,null,parseBalance);getParam(a,b,"usdPurch",/RUB<\/code>\s*<amount>([^<]+)<\/amount>\s*<\/from>\s*<to>\s*<code>USD/i,null,parseBalance);
getParam(a,b,"usdSell",/USD<\/code>\s*<\/from>\s*<to>\s*<code>RUB<\/code>([\s\S]*?)<\//i,null,parseBalance)}}
function processThanksAPI(b){if(AnyBalance.isAvailable("spasibo")){var a=requestApi("private/profile/loyaltyURL.do");(a=getParam(a,null,null,/<url>([^<]{10,})/i,replaceTagsAndSpaces))?(a=AnyBalance.requestGet(a),getParam(getElement(a,/<[^>]+balance-banner/i),b,"spasibo",null,replaceTagsAndSpaces,parseBalance)):AnyBalance.trace("Не удалось найти ссылку на программу спасибо, сайт изменен?")}};
