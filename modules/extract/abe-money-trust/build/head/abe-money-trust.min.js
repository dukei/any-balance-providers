var g_headers={Accept:"application/json, text/plain, */*","Accept-Language":"ru,en;q=0.8",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.76 Safari/537.36"},baseurl="https://online.trust.ru/",baseurlAPI=baseurl+"api/v1/",currencys={810:"р",840:"$"},states={0:"Активен",1:"Скрыт"};
function apiCall(b,a,c){var d=addHeaders({Referer:baseurl,"X-Requested-With":"XMLHttpRequest",Accept:"*/*",CSP:"active"});b=AnyBalance.requestPost(baseurlAPI+b,a,c?addHeaders(d,c):d);if(!b)throw new AnyBalance.Error("Не удалось получить ответ от сервера. Ошибка при компановке запроса, проверьте заголовок Authorization!");a=getJson(b);if(a.error)throw AnyBalance.trace(b),new AnyBalance.Error(a.error);return a}function getToken(){return AnyBalance.getData("token")}
function doLogin(b){var a=apiCall("sessions",{username:b.login,password:b.password});b=a.sessionKey;if("AUTH_SMS"==a.next){AnyBalance.trace("Требуется ввод одноразового кода из СМС.");if(7<=AnyBalance.getLevel())a=AnyBalance.retrieveCode("Пожалуйста, введите код из смс для входа в интернет-банк."),AnyBalance.trace("Смс получено: "+a);else throw new AnyBalance.Error("Провайдер требует AnyBalance API v7, пожалуйста, обновите приложение!");if(!a)throw new AnyBalance.Error("Не удалось получить код из смс!");
a=apiCall("auth2",{smsKey:a},{Authorization:b})}if(!b||"MAIN"!=a.next)throw AnyBalance.trace(JSON.stringify(a)),new AnyBalance.Error("Не удалось войти, проблемы на сайте или сайт изменен!");__setLoginSuccessful();AnyBalance.setData("token",b);AnyBalance.saveData();return a}
function login(b){AnyBalance.setOptions({SSL_ENABLED_PROTOCOLS:["TLSv1.2"]});AnyBalance.setDefaultCharset("utf-8");checkEmpty(b.login,"Введите логин!");checkEmpty(b.password,"Введите пароль!");var a=AnyBalance.requestGet(baseurl+"i",g_headers);if(!a||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(a),new AnyBalance.Error("Ошибка при подключении к сайту провайдера! Попробуйте обновить данные позже.");(a=getToken())?(AnyBalance.trace("Мы уже вошли, повторно входить не будем."),(a=AnyBalance.requestGet(baseurlAPI+
"main",addHeaders({Authorization:a,Referer:baseurl+"i"})))?b=getJson(a):(AnyBalance.trace("Сессия устарела, нужно войти повторно."),b=doLogin(b))):(AnyBalance.trace("Мы еще не входили в кабинет, самое время, сделать это сейчас."),b=doLogin(b));return b}
function processProfile(b,a){if(AnyBalance.isAvailable("profile")){var c=a.profile={};getParam(b.profile.address,c,"profile.address",null,replaceTagsAndSpaces);getParam(b.profile.email,c,"profile.email",null,replaceTagsAndSpaces);getParam(b.profile.filial,c,"profile.filial",null,replaceTagsAndSpaces);getParam(b.profile.name,c,"profile.name",null,replaceTagsAndSpaces);getParam(b.profile.phone,c,"profile.phone",null,replaceTagsAndSpaces)}}
function processAccounts(b,a){var c=b.accounts;if(c.length){AnyBalance.trace("Найдено счетов: "+c.length);a.accounts=[];for(var d=0;d<c.length;++d){var e={__id:c[d].number,__name:c[d].number};__shouldProcess("accounts",e)&&processAccount(c[d],e);a.accounts.push(e)}}else AnyBalance.trace(JSON.stringify(b)),AnyBalance.trace("Счета не найдены.")}
function processAccount(b,a){AnyBalance.trace("Обработка счета "+a.__name);getParam(b.rest+"",a,"accounts.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[b.currency],a,["accounts.currency","accounts.balance"]);getParam(b.number,a,"accounts.accnum",null,replaceTagsAndSpaces);getParam(b.type,a,"accounts.type",null,replaceTagsAndSpaces);getParam(states[b.state],a,"accounts.status");AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(b,a)}
function processCards(b,a){var c=b.cards;if(c.length){AnyBalance.trace("Найдено карт: "+c.length);a.cards=[];for(var d=0;d<c.length;++d){var e={__id:c[d].number,__name:c[d].number};__shouldProcess("cards",e)&&processCard(c[d],e);a.cards.push(e)}}else AnyBalance.trace(JSON.stringify(b)),AnyBalance.trace("Карты не найдены.")}
function processCard(b,a){AnyBalance.trace("Обработка карты "+a.__name);getParam(b.rest+"",a,"cards.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[b.currency],a,["cards.currency","cards.balance"]);getParam(b.number,a,"cards.cardnum",null,replaceTagsAndSpaces);getParam(b.type,a,"cards.type",null,replaceTagsAndSpaces);getParam(b.dateExpire,a,"cards.till",null,replaceTagsAndSpaces,parseDateWord);getParam(b.cardHolderName,a,"cards.fio",null,replaceTagsAndSpaces);getParam(states[b.state],
a,"cards.status");isAvailable("cards.transactions")&&processCardTransactions(b,a)}function processDeposits(b,a){var c=b.deposits;if(c.length){AnyBalance.trace("Найдено депозитов: "+c.length);a.deposits=[];for(var d=0;d<c.length;++d){var e={__id:c[d].number,__name:c[d].number};__shouldProcess("deposits",e)&&processDeposit(c[d],e);a.deposits.push(e)}}else AnyBalance.trace(JSON.stringify(b)),AnyBalance.trace("Депозиты не найдены.")}
function processDeposit(b,a){AnyBalance.trace("Обработка депозита "+a.__name);getParam(b.rest+"",a,"deposits.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[b.currency],a,["deposits.currency","deposits.balance"]);getParam(b.number,a,"deposits.accnum",null,replaceTagsAndSpaces);getParam(b.type,a,"deposits.type",null,replaceTagsAndSpaces);getParam(b.closed,a,"deposits.till",null,replaceTagsAndSpaces,parseDate);getParam(states[b.state],a,"deposits.status");getParam(b.contract,a,"deposits.contract",
null,replaceTagsAndSpaces);getParam(b.rate+"",a,"deposits.rate",null,replaceTagsAndSpaces,parseBalance);isAvailable("deposits.transactions")&&processDepositTransactions(b,a)}function processCredits(b,a){throw new AnyBalance.Error("Обработка кредитов пока не поддерживается. Пожалуйста, обратитесь к обработчикам");};
