var g_headers={Accept:"application/json, text/plain, */*","Accept-Language":"ru,en;q=0.8",Connection:"keep-alive","User-Agent":"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/29.0.1547.76 Safari/537.36"},baseurl="https://online.trust.ru/",baseurlAPI=baseurl+"api/v1/",currencys={810:"р",840:"$"},states={0:"Активен",1:"Скрыт"};
function apiCall(a,b,c){var d=addHeaders({Referer:baseurl,"X-Requested-With":"XMLHttpRequest",Accept:"*/*",CSP:"active"});a=AnyBalance.requestPost(baseurlAPI+a,b,c?addHeaders(d,c):d);if(!a)throw new AnyBalance.Error("Не удалось получить ответ от сервера. Ошибка при компановке запроса, проверьте заголовок Authorization!");b=getJson(a);if(b.error)throw AnyBalance.trace(a),new AnyBalance.Error(b.error);return b}function getToken(){return AnyBalance.getData("token")}
function doLogin(a){var b=apiCall("sessions",{username:a.login,password:a.password});a=b.sessionKey;if("AUTH_SMS"==b.next){AnyBalance.trace("Требуется ввод одноразового кода из СМС.");if(7<=AnyBalance.getLevel())b=AnyBalance.retrieveCode("Пожалуйста, введите код из смс для входа в интернет-банк."),AnyBalance.trace("Смс получено: "+b);else throw new AnyBalance.Error("Провайдер требует AnyBalance API v7, пожалуйста, обновите приложение!");if(!b)throw new AnyBalance.Error("Не удалось получить код из смс!");
b=apiCall("auth2",{smsKey:b},{Authorization:a})}if(!a||"MAIN"!=b.next)throw AnyBalance.trace(JSON.stringify(b)),new AnyBalance.Error("Не удалось войти, проблемы на сайте или сайт изменен!");__setLoginSuccessful();AnyBalance.setData("token",a);AnyBalance.saveData();return b}
function login(a){AnyBalance.setOptions({SSL_ENABLED_PROTOCOLS:["TLSv1.2"]});AnyBalance.setDefaultCharset("utf-8");checkEmpty(a.login,"Введите логин!");checkEmpty(a.password,"Введите пароль!");var b=AnyBalance.requestGet(baseurl+"i",g_headers);if(!b||400<AnyBalance.getLastStatusCode())throw AnyBalance.trace(b),new AnyBalance.Error("Ошибка при подключении к сайту провайдера! Попробуйте обновить данные позже.");if(b=getToken()){AnyBalance.trace("Мы уже вошли, повторно входить не будем.");b=AnyBalance.requestGet(baseurlAPI+
"main",addHeaders({Authorization:b,Referer:baseurl+"i"}));try{c=getJson(b)}catch(d){AnyBalance.trace("Сессия устарела, нужно войти повторно: "+d.message),c=doLogin(a)}}else{AnyBalance.trace("Мы еще не входили в кабинет, самое время, сделать это сейчас.");var c=doLogin(a)}return c}
function processProfile(a,b){AnyBalance.isAvailable("profile")&&(b=b.profile={},getParam(a.profile.address,b,"profile.address",null,replaceTagsAndSpaces),getParam(a.profile.email,b,"profile.email",null,replaceTagsAndSpaces),getParam(a.profile.filial,b,"profile.filial",null,replaceTagsAndSpaces),getParam(a.profile.name,b,"profile.name",null,replaceTagsAndSpaces),getParam(a.profile.phone,b,"profile.phone",null,replaceTagsAndSpaces))}
function processAccounts(a,b){var c=a.accounts;if(c.length)for(AnyBalance.trace("Найдено счетов: "+c.length),b.accounts=[],a=0;a<c.length;++a){var d={__id:c[a].number,__name:c[a].number};__shouldProcess("accounts",d)&&processAccount(c[a],d);b.accounts.push(d)}else AnyBalance.trace(JSON.stringify(a)),AnyBalance.trace("Счета не найдены.")}
function processAccount(a,b){AnyBalance.trace("Обработка счета "+b.__name);getParam(a.rest+"",b,"accounts.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[a.currency],b,["accounts.currency","accounts.balance"]);getParam(a.number,b,"accounts.accnum",null,replaceTagsAndSpaces);getParam(a.type,b,"accounts.type",null,replaceTagsAndSpaces);getParam(states[a.state],b,"accounts.status");AnyBalance.isAvailable("accounts.transactions")&&processAccountTransactions(a,b)}
function processCards(a,b){var c=a.cards;if(c.length)for(AnyBalance.trace("Найдено карт: "+c.length),b.cards=[],a=0;a<c.length;++a){var d={__id:c[a].number,__name:c[a].number};__shouldProcess("cards",d)&&processCard(c[a],d);b.cards.push(d)}else AnyBalance.trace(JSON.stringify(a)),AnyBalance.trace("Карты не найдены.")}
function processCard(a,b){AnyBalance.trace("Обработка карты "+b.__name);getParam(a.rest+"",b,"cards.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[a.currency],b,["cards.currency","cards.balance"]);getParam(a.number,b,"cards.cardnum",null,replaceTagsAndSpaces);getParam(a.type,b,"cards.type",null,replaceTagsAndSpaces);getParam(a.dateExpire,b,"cards.till",null,replaceTagsAndSpaces,parseDateWord);getParam(a.cardHolderName,b,"cards.fio",null,replaceTagsAndSpaces);getParam(states[a.state],
b,"cards.status");isAvailable("cards.transactions")&&processCardTransactions(a,b)}function processDeposits(a,b){var c=a.deposits;if(c.length)for(AnyBalance.trace("Найдено депозитов: "+c.length),b.deposits=[],a=0;a<c.length;++a){var d={__id:c[a].number,__name:c[a].number};__shouldProcess("deposits",d)&&processDeposit(c[a],d);b.deposits.push(d)}else AnyBalance.trace(JSON.stringify(a)),AnyBalance.trace("Депозиты не найдены.")}
function processDeposit(a,b){AnyBalance.trace("Обработка депозита "+b.__name);getParam(a.rest+"",b,"deposits.balance",null,replaceTagsAndSpaces,parseBalance);getParam(currencys[a.currency],b,["deposits.currency","deposits.balance"]);getParam(a.number,b,"deposits.accnum",null,replaceTagsAndSpaces);getParam(a.type,b,"deposits.type",null,replaceTagsAndSpaces);getParam(a.closed,b,"deposits.till",null,replaceTagsAndSpaces,parseDate);getParam(states[a.state],b,"deposits.status");getParam(a.contract,b,"deposits.contract",
null,replaceTagsAndSpaces);getParam(a.rate+"",b,"deposits.rate",null,replaceTagsAndSpaces,parseBalance);isAvailable("deposits.transactions")&&processDepositTransactions(a,b)}function processCredits(a,b){throw new AnyBalance.Error("Обработка кредитов пока не поддерживается. Пожалуйста, обратитесь к обработчикам");};
